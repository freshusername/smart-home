@using smart_home_web.Models.SensorViewModel;

@model IEnumerable<SensorViewModel>

@{
    ViewData["Title"] = "Sensors";
}
<link href="~/css/OnOff.css" rel="stylesheet" />

<div class="app-main">
    <div class="app-main__outer">
        <div class="app-main__inner">
            <div class="app-header">
                <div class="page-title-heading">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="button-center">
                            <a class="mb-2 mr-2 btn btn-primary text-white sensor-create">Add new sensor</a>
                        </div>
                    }
                </div>
            </div>
            <div class="app-inner-layout app-inner-layout-page">
                <div class="app-inner-layout__wrapper">
                    <div class="app-inner-layout__content" style="padding-top: 0px">
                        <div class="tab-content">
                            <div class="container-fluid">
                                <div class="main-card mb-3 card" data-save-url="@Url.Action("SetActive", "Sensor")">
                                    <ul class="list-group list-group-flush">

                                        @foreach (var item in Model)
                                        {
                                            @await Component.InvokeAsync("SensorElement", item)
                                        }

                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@await Component.InvokeAsync("Modals")

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(function () {
        let currentRow = null;
        const modal = $("#modalWindow");
        const modalBody = modal.find(".modal-body");
        const tableBody = $("table").find("tbody");
        $("#modal-delete-confirm").hide(0);
        $(".sensor-edit").click(SensorEdit);
        $(".sensor-create").click(SensorCreate);
        $(".sensor-delete").click(SensorDeleteConfirm);
        NoValuesDisplay();

        function NoValuesDisplay() {
            let row = $(".no-values-row");
            if (row.siblings().length > 0) {
                row.hide();
            } else {
                row.show();
            }
        }

        function SensorEdit() {
            currentRow = $(this).closest(".sensor-row");
            modal.modal("hide");
            $.ajax({
                url: '@Url.Action("Edit","Sensor")',
                data: { id: currentRow.data("sensor-row-id") },
                beforeSend: function () {
                    modal.fadeIn(600);
                    return true;
                },
                success: function (data) {
                    modal.find(".modal-title").text("Edit Sensor");
                    modalBody.prepend(data);
                    modalBody.on("submit", "#modal-form-edit", ModalFormEditSubmit);
                    modalBody.on("click", ".back-to-list", HideModal);
                    modal.modal("show");
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function SensorCreate() {
            $.ajax({
                url: '@Url.Action("Create","Sensor")',
                beforeSend: function () {
                    modal.fadeIn(600);
                    return true;
                },
                success: function (data) {
                    modal.find(".modal-title").text("Create Sensor");
                    modalBody.prepend(data);
                    modalBody.on("submit", "#modal-form-create", ModalFormCreateSubmit);
                    modalBody.on("click", ".back-to-list", HideModal);
                    modal.modal("show");
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function SensorDeleteConfirm() {
            currentRow = $(this).closest(".sensor-row");
            modal.find(".modal-title").text("Are you sure ?");
            $("#modal-delete-confirm").clone().prependTo(modalBody);
            $("#modal-delete-confirm").show(0);
            $("#modal-delete-button").data("element-id", currentRow.data("sensor-row-id"));
            modalBody.on("click", "#modal-delete-button", SensorTypeDelete);
            modal.fadeIn(600);
            modal.modal("show");
        }

        function SensorTypeDelete() {
            $.ajax({
                url: '@Url.Action("Delete","Sensor")',
                data: { Id: $(this).data("sensor-id") },
                beforeSend: function () {
                    modal.modal("hide");
                    currentRow.hide(800, function () {
                        currentRow.remove();
                        NoValuesDisplay();
                    });
                    return true;
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function ModalFormCreateSubmit() {
            event.preventDefault();
            var inputFile = $(this).find(".modal-form-file");
            var form = document.getElementById($(this).attr("id"));
            var fd = new FormData(form);
            fd.append('IconFile', inputFile.prop('files')[0]);
            $.ajax({
                url: '@Url.Action("Create","Sensor")',
                method: "POST",
                processData: false,
                contentType: false,
                data: fd,
                beforeSend: function () {
                    modal.modal("hide");
                    return true;
                },
                success: function (data) {
                    tableBody.prepend(data);
                    tableBody.on("click", ".sensor-edit", SensorEdit);
                    tableBody.on("click", ".sensor-delete", SensorDeleteConfirm);
                    tableBody.on("click", ".fa-eye-slash", toggleEyeIcon);
                    tableBody.on("click", ".input-set-active", SetActiveAjax);
                    tableBody.on("click", ".input-set-active", SetActiveAjax);
                    NoValuesDisplay();
                },
                error: function (res) {
                    console.log(res);
                }
            })
        }

        function ModalFormEditSubmit() {
            event.preventDefault();
            var inputFile = $(this).find(".modal-form-file");
            var form = document.getElementById($(this).attr("id"));
            var fd = new FormData(form);
            fd.append('IconFile', inputFile.prop('files')[0]);

            $.ajax({
                url: '@Url.Action("Edit","Sensor")',
                method: "POST",
                processData: false,
                contentType: false,
                data: fd,
                beforeSend: function () {
                    modal.modal("hide");;
                    currentRow.hide(800);
                    return true;
                },
                success: function (data) {
                    currentRow.replaceWith(data);
                    currentRow.show(800);
                    tableBody.on("click", ".sensor-edit", SensorEdit);
                    tableBody.on("click", ".sensor-delete", SensorDeleteConfirm);
                    tableBody.on("click", ".fa-eye-slash", toggleEyeIcon);
                    tableBody.on("click", ".input-set-active", SetActiveAjax);
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function HideModal() {
            modal.modal("hide");
        }

        modal.on('hidden.bs.modal', function () {
            modalBody.empty();
            $(this).find(".modal-title").empty();
        });

        $('.fa-eye-slash').click(toggleEyeIcon);

        function toggleEyeIcon() {
            $(this).toggleClass('fa fa-eye');
            $(this).toggleClass('fa fa-eye-slash');
            $(this).next().toggle();
        }

        var SetActiveAjax = function () {
            let input = $(this);
            $.ajax({
                type: 'Post',
                url: "/Sensor/SetActive",
                data: { id: input.attr('id') },
                //Doesnt work because we cannot find element with "sensor-row"
                //success: function () {
                //    console.log(closest(".sensor-row"));
                //    input.closest(".sensor-row")
                //        .find(".sensor-activated").toggleClass("fa-check-circle fa-times-circle");
                //}
            });
        }
        $(".input-set-active").on("click", SetActiveAjax);

        $(".input-set-active").on("click", function () {
            $(this).toggleClass("toggle-shadow");
        });
    });
</script>
