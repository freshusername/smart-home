@{
    Layout = "_DashboardLayout";
}
@using smart_home_web.Models.Dashboard;
@using Domain.Core.Model.Enums;
@using smart_home_web.Components;
@model DashboardViewModel;
@*<script src="~/lib/gridstack.js/gridstack.js"></script>*@
@*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gridstack@0.6.1/dist/gridstack.min.css" />
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/gridstack@0.6.1/dist/gridstack.all.js"></script>*@

<div class="app-main">
    <div class="app-main__outer">
        <div class="app-inner-layout app-inner-layout-page">
            <div class="app-inner-layout__content">
                <div class="app-header">
                    <div class="page-title-heading">
                        @Model.Name
                        <a class="btn text-center"
                           asp-controller="ReportElement"
                           asp-action="CreateReportElement"
                           asp-route-dashboardId="@Model.Id">
                            <i class="pe-7s-plus fsize-3" aria-hidden="true"></i>
                        </a>
                    </div>
                </div>
                <div class="app-inner-layout app-inner-layout-page">
                    <div class="app-inner-layout__wrapper">
                        <div class="app-inner-layout__content pt-1">
                            <div class="tab-content">
                                <div class="container-fluid">
                                    <div class="grid-stack" data-save-url="@Url.Action("UpdateOptions", "DashboardOptions")">
                                        @foreach (var report in Model.ReportElements)
                                        {
                                            <div id="@report.Id" class="grid-stack-item d-flex flex-column"
                                                 data-identifier="@report.Id" data-locked="@report.IsLocked"
                                                 data-gs-min-height="6" data-gs-min-width="4"
                                                 data-gs-width="@report.Width" data-gs-height="@report.Height"
                                                 data-gs-x="@report.X" data-gs-y="@report.Y">
                                                <div class="grid-stack-item-content card">
                                                    <div class="d-flex flex-row">
                                                        <div class="text-center btn-control-icon report-button text-center" onclick=remove(@report.Id)>
                                                            <span><i class="fas fa-times"></i></span>
                                                        </div>
                                                        @if (report.Type != Domain.Core.Model.Enums.ReportElementType.StatusReport)
                                                        {
                                                            <div class="text-center btn-control-icon text-center">
                                                                <a asp-controller="ReportElement" asp-action="EditReportElement" asp-route-id="@report.Id"><i class="fas fa-cog report-button"></i></a>
                                                            </div>
                                                        }

                                                        <div class="text-center btn-control-icon text-center" onclick=lock(@report.Id)>
                                                            <i class="fas report-button i-button"></i>
                                                        </div>
                                                    </div>
                                                    <div>@await Component.InvokeAsync(report.Type.ToString(), new { reportElementId = report.Id })</div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $(".grid-stack").gridstack();

        let elements = $(".grid-stack-item");
        for (var i = 0; i < elements.length; i++) {
            visualLock(elements[i].id);
        }
    });

    let arrToObj = arr => {
        let obj = {}
        for (const i in arr) {
            obj[i] = arr[i]
        }
        return obj
    }

    $('.grid-stack').on('change', function (event, items) {
        debugger;
        let options = [];
        options = items.map(i => {
            return { id: parseInt(i.el[0].id), x: i.x, y: i.y, width: i.width, height: i.height }
        });

        $.ajax({
            type: "POST",
            url: $(".grid-stack").data("save-url"),
            data: { options: arrToObj(options) }
        });
    });

    let remove = (id) => {
        if (confirm("Are you sure you wish to delete this widget?") == true) {
            let grid = $(".grid-stack").data('gridstack');
            let item = $("#" + id)[0];
            grid.removeWidget(item);

            $.ajax({
                type: "POST",
                url: "/ReportElement/DeleteReportElement",
                data: { id: id }
            });
        }
    }

    var lock = (id) => {
        grid = $(".grid-stack").data("gridstack");

        let item = $("#" + id);
        if (item != null) {
            if (item[0].dataset.locked == "False") {
                item[0].dataset.locked = "True"
            }
            else {
                item[0].dataset.locked = "False"
            }

            let flag = item[0].dataset.locked == "True";
            grid.resizable(item, !flag);
            grid.movable(item, !flag);
            grid.locked(item, flag);

            $(".i-button", item).toggleClass("fa-lock text-danger");
            $(".i-button", item).toggleClass("fa-unlock text-success");

            $.ajax({
                type: "POST",
                url: "/ReportElement/LockReportElement",
                data: { id: id }
            });
        }
    }

    var visualLock = (id) => {
        grid = $(".grid-stack").data("gridstack");
        let item = $("#" + id);
        if (item != null) {
            //TODO: Create separate func
            let flag = item[0].dataset.locked == "True";
            grid.resizable(item, !flag);
            grid.movable(item, !flag);
            grid.locked(item, flag);
            if (flag) {
                $(".i-button", item).addClass("fa-lock text-danger");
                $(".i-button", item).removeClass("fa-unlock text-success");
            }
            else {
                $(".i-button", item).removeClass("fa-lock text-danger");
                $(".i-button", item).addClass("fa-unlock text-success");
            }
        }
    }

</script>