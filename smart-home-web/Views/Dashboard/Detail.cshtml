@{
    Layout = "_DashboardLayout";
}
@using smart_home_web.Models.Dashboard;
@using smart_home_web.Components;
@model DashboardViewModel;

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gridstack@0.6.0/dist/gridstack.min.css" />
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/gridstack@0.6.0/dist/gridstack.all.js"></script>

<h1>@Model.Name Dashboard</h1>

<div class="grid-stack grid-stack-animate" data-save-url="@Url.Action("UpdateOptions", "DashboardOptions")">
    @foreach (var report in Model.ReportElements)
    {
        <div id="@report.Id" class="grid-stack-item shadow-standart card d-flex flex-column" data-identifier="@report.Id" data-gs-x="@report.X" data-gs-y="@report.Y" data-gs-width="@report.Width" data-gs-height="@report.Height">
            <div class="grid-stack-item-content">
                <div class="d-flex flex-row">
                    <div id="trash-@report.Id" class="text-center btn-control-icon" onclick=remove(@report.Id)>
                        <span><i class="fas fa-times"></i></span>
                    </div>
                    <div class="text-center btn-control-icon">
                        <a asp-controller="ReportElement" asp-action="EditReportElement" asp-route-reportElementId="@report.Id"><i class="fas fa-cog"></i></a>
                    </div>
                </div>
                <div>@await Component.InvokeAsync(report.Type.ToString(), new { reportElementId = report.Id })</div>
            </div>
        </div>
    }
</div>



<script>

    let arrToJson = arr => {
        let obj = {}
        for (const i in arr) {
            obj[i] = arr[i]
        }
        return obj
    }

    $('.grid-stack').gridstack();
    $('body').on('change', '.grid-stack', function (event, items) {
        var options = [];
        options = items.map(i => {
            return { id: parseInt(i.el[0].id), x: i.x, y: i.y, width: i.width, height: i.height }
        });

        $.ajax({
            type: "POST",
            url: $(".grid-stack").data("save-url"),
            data: { options: arrToJson(options) }
        });
    });
</script>

@*<script>
        $('body').on('gsresizestop', '.grid-stack', function (event, ui) {
            chart.setSize($('container').width(), 400);
        });
    </script>*@
<script>
        $('body').on('gsresizestop', '.grid-stack', function (event, ui) {
            chart.setSize($('container').width(), 400);
        });
</script>
<script>
    $('body').on('gsresizestop', '.grid-stack', function (event, ui) {
        chart.setSize($('container').width(), 400);
    });
</script>
<script>
    $('body').on('gsresizestop', '.grid-stack', function (event, ui) {
        chart.setSize($('container').width(), 400);
    });
</script>
<script>
    let remove = (id) => {
        if (confirm("Are you sure you wish to delete this widget?") == true) {
            var $eGridstack = $(".grid-stack");
            var item = $("#" + id)[0];
            $eGridstack.data('gridstack').removeWidget(item);

            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteReportElement", "ReportElement")",
                data: { id : id }
            });
        }
    }
</script>