@model IEnumerable<smart_home_web.Models.SensorType.SensorTypeViewModel>

@{
    ViewData["Title"] = "SensorTypes";
}

<style>
    .modal-backdrop.in {
        opacity: 0.5 !important;
    }
</style>

<h2>List of sensor types</h2>



@if (User.Identity.IsAuthenticated)
{
    <div class="button-center">
        <a class="btn btn-success sensor-type-create">Create New</a>
    </div>
}

<table class="table text-center">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MeasurementType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MeasurementName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IconPath)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr height="64" class="sensor-type-row" data-sensor-type-row-id="@item.Id">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeasurementType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeasurementName)
                </td>

                <td>
                    @if (item.IconPath != null)
                    {
                        <img src="@item.IconPath" width="64" height="64" />
                    }
                    else
                    {
                        <p>No image was added</p>
                    }
                </td>
                @if (User.Identity.IsAuthenticated)
                {
                    <td>
                        <a class="btn btn-sm btn-info text-center sensor-type-edit"
                           data-sensor-type-id="@item.Id"
                           data-toggle="modal" data-target="#myModal">
                            <i class="fa fa-edit"></i>
                        </a>
                        <a class="btn btn-sm btn-danger text-center sensor-type-delete"
                           data-sensor-type-id="@item.Id">
                            <i class="fa fa-trash"></i>
                        </a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>


@*class 'fade' don't working in Bootstrap 4*@
<div class="modal" id="modalWindow" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title"></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(function () {
        let parent = null;
        let modal = $("#modalWindow");
        $(".sensor-type-edit").click(SensorTypeEdit);
        $(".sensor-type-create").click(SensorTypeCreate);
        $(".sensor-type-delete").click(SensorTypeDelete);

        function SensorTypeEdit() {
            parent = $(this).closest(".sensor-type-row");
            $.ajax({
                url: '@Url.Action("Edit","SensorType")',
                data: { id: parent.data("sensor-type-row-id") },
                beforeSend: function () {
                    modal.fadeIn(600);
                    return true;
                },
                success: function (data) {
                    modal.find(".modal-title").text("Edit Sensor Type");
                    modal.find(".modal-body").append(data);
                    modal.on("submit", ".modal-form-edit", ModalFormEditSubmit);
                    modal.on("click", ".back-to-list", HideModal);
                    modal.modal();
                }
            });
        }

        function SensorTypeCreate() {
            $.ajax({
                url: '@Url.Action("Create","SensorType")',
                beforeSend: function () {
                    modal.fadeIn(600);
                    return true;
                },
                success: function (data) {
                    modal.find(".modal-title").text("Create Sensor Type");
                    modal.find(".modal-body").append(data);
                    modal.on("submit", ".modal-form-create", ModalFormCreateSubmit);
                    modal.on("click", ".back-to-list", HideModal);
                    modal.modal();
                }
            });
        }

        function SensorTypeDelete() {
            if (confirm("Are you sure?")) {
                let parent = $(this).closest(".sensor-type-row");
                $.ajax({
                    url: '@Url.Action("Delete","SensorType")',
                    data: { sensorTypeId: $(this).data("sensor-type-id") },
                    beforeSend: function () {
                        parent.hide(800, function () {
                            parent.remove();
                        })
                        return true;
                    }
                });
            }
        }

        function ModalFormCreateSubmit() {
            event.preventDefault();
            $.ajax({
                url: '@Url.Action("Create","SensorType")',
                method: "POST",
                data: $(".modal-form-create").serialize(),
                beforeSend: function () {
                    modal.modal("hide");
                    return true;
                },
                success: function (data) {
                    let tbody = $("tbody");
                    tbody.prepend(data);
                    tbody.on("click", ".sensor-type-edit", SensorTypeEdit);
                    tbody.on("click", ".sensor-type-create", SensorTypeCreate);
                    tbody.show(500);
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function ModalFormEditSubmit() {
            event.preventDefault();
            let SensorTypeId = $(this).data("sensor-type-id");
            $.ajax({
                url: '@Url.Action("Edit","SensorType")',
                method: "POST",
                data: $(this).serialize(),
                beforeSend: function () {
                    HideModal();
                    parent.hide(800);
                    return true;
                },
                success: function (data) {
                    parent.replaceWith(data);
                    parent.show(800);
                    let tbody = $("tbody");
                    tbody.on("click", ".sensor-type-edit", SensorTypeEdit);
                    tbody.on("click", ".sensor-type-create", SensorTypeCreate);
                }
            });
        }

        function HideModal() {
            modal.modal("hide");
        }

        modal.on('hidden.bs.modal', function (e) {
            $(this).find(".modal-body").empty();
            $(this).find(".modal-title").empty();
        });

        
    });
</script>
