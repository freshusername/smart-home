@model IEnumerable<smart_home_web.Models.SensorType.SensorTypeViewModel>

@{
    ViewData["Title"] = "SensorTypes";
}

<style>
    .modal-backdrop.in {
        opacity: 0.5 !important;
    }
</style>
<div class="container">
    <h2>List of sensor types</h2>

    @if (User.Identity.IsAuthenticated)
    {
        <div class="button-center">
            <a class="btn btn-success sensor-type-create">Create New</a>
        </div>
    }

    <table class="table text-center">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Comment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MeasurementType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MeasurementName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IconPath)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr class="no-values-row" style="display:none;">
                <td colspan="5">No Sensor Types</td>
            </tr>
            @foreach (var item in Model)
            {
                @await Component.InvokeAsync("SensorTypeElement", item)
            }
        </tbody>
    </table>

    @await Component.InvokeAsync("Modals")
</div>


<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(function () {
        let currentRow = null;
        const modal = $("#modalWindow");
        const modalBody = modal.find(".modal-body");
        const tableBody = $("table").find("tbody");
        $("#modal-delete-confirm").hide(0);
        $(".sensor-type-edit").click(SensorTypeEdit);
        $(".sensor-type-create").click(SensorTypeCreate);
        $(".sensor-type-delete").click(SensorTypeDeleteConfirm);
        NoValuesDisplay();

        function NoValuesDisplay() {
            let row = $(".no-values-row");
            if (row.siblings().length > 0) {
                row.hide();
            } else {
                row.show();
            }
        }

        function SensorTypeEdit() {
            currentRow = $(this).closest(".sensor-type-row");
            modal.modal("hide");
            $.ajax({
                url: '@Url.Action("Edit","SensorType")',
                data: { id: currentRow.data("sensor-type-row-id") },
                beforeSend: function () {
                    modal.fadeIn(600);
                    return true;
                },
                success: function (data) {
                    modal.find(".modal-title").text("Edit Sensor Type");
                    modalBody.prepend(data);
                    modalBody.on("submit", "#modal-form-edit", ModalFormEditSubmit);
                    modalBody.on("click", ".back-to-list", HideModal);
                    modal.modal("show");
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function SensorTypeCreate() {
            $.ajax({
                url: '@Url.Action("Create","SensorType")',
                beforeSend: function () {
                    modal.fadeIn(600);
                    return true;
                },
                success: function (data) {
                    modal.find(".modal-title").text("Create Sensor Type");
                    modalBody.prepend(data);
                    modalBody.on("submit", "#modal-form-create", ModalFormCreateSubmit);
                    modalBody.on("click", ".back-to-list", HideModal);
                    modal.modal("show");
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function SensorTypeDeleteConfirm() {
            currentRow = $(this).closest(".sensor-type-row");
            modal.find(".modal-title").text("Are you sure ?");
            $("#modal-delete-confirm").clone().prependTo(modalBody);
            $("#modal-delete-confirm").show(0);
            $("#modal-delete-button").data("sensor-type-id", currentRow.data("sensor-type-row-id"));
            modalBody.on("click", "#modal-delete-button", SensorTypeDelete);
            modal.fadeIn(600);
            modal.modal("show");
        }

        function SensorTypeDelete() {
            $.ajax({
                url: '@Url.Action("Delete","SensorType")',
                data: { Id: $(this).data("sensor-type-id") },
                beforeSend: function () {
                    modal.modal("hide");
                    currentRow.hide(800, function () {
                        currentRow.remove();
                        NoValuesDisplay();
                    });
                    return true;
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function ModalFormCreateSubmit() {
            event.preventDefault();
            var inputFile = $(this).find(".modal-form-file");
            var form = document.getElementById($(this).attr("id"));
            var fd = new FormData(form);
            fd.append('IconFile', inputFile.prop('files')[0]);
            $.ajax({
                url: '@Url.Action("Create","SensorType")',
                method: "POST",
                processData: false,
                contentType: false,
                data: fd,
                beforeSend: function () {
                    modal.modal("hide");
                    return true;
                },
                success: function (data) {
                    tableBody.prepend(data);
                    tableBody.on("click", ".sensor-type-edit", SensorTypeEdit);
                    tableBody.on("click", ".sensor-type-delete", SensorTypeDeleteConfirm);
                    NoValuesDisplay();
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function ModalFormEditSubmit() {
            event.preventDefault();
            var inputFile = $(this).find(".modal-form-file");
            var form = document.getElementById($(this).attr("id"));
            var fd = new FormData(form);
            fd.append('IconFile', inputFile.prop('files')[0]);

            $.ajax({
                url: '@Url.Action("Edit","SensorType")',
                method: "POST",
                processData: false,
                contentType: false,
                data: fd,
                beforeSend: function () {
                    modal.modal("hide");;
                    currentRow.hide(800);
                    return true;
                },
                success: function (data) {
                    currentRow.replaceWith(data);
                    currentRow.show(800);
                    tableBody.on("click", ".sensor-type-edit", SensorTypeEdit);
                    tableBody.on("click", ".sensor-type-delete", SensorTypeDeleteConfirm);
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }

        function HideModal() {
            modal.modal("hide");
        }

        modal.on('hidden.bs.modal', function () {
            modalBody.empty();
            $(this).find(".modal-title").empty();
        });  
    });
</script>
